class Solution:
    def maximumRobots(self, chargeTimes: List[int], runningCosts: List[int], budget: int) -> int:
        heap = []
        seen = defaultdict(int)
        left = ans = running_sum = 0
        
        for right in range(len(chargeTimes)):
            
            heappush(heap, -chargeTimes[right])
            seen[chargeTimes[right]] +=1
            running_sum += runningCosts[right]
            total_cost = -heap[0] + (right - left +1)*running_sum
          
            #contract window until it is valid again
            while total_cost > budget:
               
                seen[chargeTimes[left]] -=1 
                running_sum-= runningCosts[left]
                left+=1
                

                #remove max value from heap if it is no longer in dictionary!
                while len(heap) > 0  and seen[-heap[0]] ==0:
                    del seen[-heap[0]]
                    heappop(heap)
                
                
                total_cost = -heap[0] + (right - left +1)*running_sum  if len(heap) > 0 else 0

            #update the answer here
            ans  = max(ans, right - left+1)  

        
        return ans
